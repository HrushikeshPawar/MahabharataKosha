default_install_hook_types:
  - pre-commit
  - post-checkout
  - post-merge
  - post-rewrite
  - commit-msg

# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-added-large-files
      - id: no-commit-to-branch
        args: [--branch, main]

  # Backend (Python) - Ruff for linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.2
    hooks:
      - id: ruff-check
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi, jupyter]
      - id: ruff-format
        types_or: [python, pyi, jupyter]

  - repo: https://github.com/astral-sh/uv-pre-commit
    # uv version.
    rev: 0.8.22
    hooks:
      - id: uv-sync
        files: backend/pyproject.toml
        args: [--project, backend, "--locked", "--all-packages"]

  # Frontend (JS/TS) - ESLint for linting, Prettier for formatting
  - repo: local
    hooks:
      # Lints frontend files using the project's own ESLint setup
      - id: eslint
        name: eslint
        language: system
        entry: frontend/node_modules/.bin/eslint
        args: ["--fix", "--config", "frontend/eslint.config.js"]
        # This tells the hook to run only if package.json or relevant source files change
        files: ^frontend/.*\.(js|jsx|ts|tsx)$
        # We need to specify the types as the files regex is complex
        types: [file]

      # Formats frontend files using the project's own Prettier setup
      - id: prettier
        name: prettier
        language: system
        entry: frontend/node_modules/.bin/prettier
        args: ["--write", "--config", "frontend/.prettierrc"]
        files: ^.*\.(js|jsx|ts|tsx|css|json|md|yaml)$
        types: [file]

  # Conventional Commits
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v4.2.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [] # optional: list of Conventional Commits types to allow e.g. [feat, fix, ci, chore, test]
