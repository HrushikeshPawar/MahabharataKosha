services:
    db:
        image: postgres:16-alpine
        container_name: mk_postgres_db
        restart: always
        env_file:
            - .env
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5

    backend:
        container_name: mk_backend
        build: ./backend
        restart: always
        volumes:
            - ./backend:/app
            - /app/.venv # Anonymous volume to prevent local .venv from overwriting container's
        env_file:
            - .env
        ports:
            - "8000:8000"
        depends_on:
            db:
                condition: service_healthy

    frontend:
        container_name: mk_frontend
        build: ./frontend
        restart: always
        volumes:
            - ./frontend:/app
            - /app/node_modules # Anonymous volume to prevent local node_modules from overwriting container's
        env_file:
            - .env
        ports:
            - "5173:5173"
        depends_on:
            - backend

volumes:
    postgres_data:
